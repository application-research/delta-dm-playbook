---
- name: Compile and deploy Delta DM
  hosts: delta_dm_node
  become: true

  # We setup the Delta user outside of the role because otherwise things like Rust and Go installation may fail.
  pre_tasks:
    - name: Check if repo-specific secrets file exists
      delegate_to: localhost
      connection: local
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/vars/secrets.yml"
      register: repo_secrets_file
      become: false

    - name: If repo-specific secrets file exists, load it in
      delegate_to: localhost
      connection: local
      ansible.builtin.include_vars:
        file: "vars/secrets.yml"
      when: repo_secrets_file.stat.exists
      become: false

    - name: Install the acl package
      ansible.builtin.package:
        name: acl
        state: present

    - name: Create a group for Delta DM
      ansible.builtin.group:
        name: "{{ delta_system_group | default('delta') }}"
        gid: 1337
        system: true

    - name: Create a user for Delta DM
      ansible.builtin.user:
        name: "{{ delta_system_user | default('delta') }}"
        group: "{{ delta_system_group | default('delta') }}"
        home: "{{ delta_system_home | default('/var/lib/arg-delta') }}"
        shell: /bin/bash
        uid: 1337
        createhome: true
        system: true

  roles:
    # Install Golang using the Gantsign role.
    - role: gantsign.golang
      golang_gopath: '$HOME/workspace-go'
    # Compile and install Delta DM, updating and restarting it if necessary.
    - role: arg-delta-dm
    # Install NodeJS 18.x
    - role: geerlingguy.nodejs
      nodejs_version: 18.x
      when: delta_web_enabled | default(true)
    # Compile and install Delta Web, updating and restarting it if necessary.
    - role: arg-delta-web
      when: delta_web_enabled | default(true)
